/*
 * -------------------------------------------------
 *  nf-core/cirpipe Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 */

process {


  cpus = { check_max( 8, 'cpus' ) }
  memory = { check_max( 20.GB * task.attempt, 'memory' ) }
  time = { check_max( 240.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'terminate' }
  maxRetries = 1
  maxErrors = '-1'
  maxForks = 3

  // Process-specific resource requirements
  withName: TOOL_MERGE {
  errorStrategy = 'ignore'
  }

  withName: CircRNA_ANNOTATION {
  errorStrategy = 'ignore'
  }

withName: MERGE_DiffernetialExpression {
  errorStrategy = 'ignore'
  }


  withName: RUN_STAR {
    cpus = { check_max( 8, 'cpus' ) }
    memory = { check_max( 35.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }

  withName: RUN_Segemehl {
    cpus = { check_max( 8, 'cpus' ) }
    memory = { check_max( 80.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }
  
  withName: RUN_Segemehl_Bed {
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }
  withName: RUN_Segemehl_Matrix {
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }



  withName: BWA_and_CIRI {
    cpus = { check_max( 8, 'cpus' ) }
    memory = { check_max( 55.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }



  withName: RECOUNT_estimate_step_single{
    cpus = { check_max( 5, 'cpus' ) }
    memory = { check_max( 100.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'terminate' }
  }
  withName: RECOUNT_estimate_step_paired{
    cpus = { check_max( 5, 'cpus' ) }
    memory = { check_max( 100.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'terminate' }
  }
  
  withName: VENN_PLOT{
  errorStrategy={'ignore'}
  }
 

}

params {
  // Defaults only, expecting to be overwritten
  max_memory = 100.GB
  max_cpus = 33
  max_time = 240.h
}
  
